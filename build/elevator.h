
/* This file was autogenerated by 'ctemp' from  for class motorbank2. */


/***********************************************************************
 * elevator.h
 ***********************************************************************/

#include <freewpc.h>

typedef enum {
	ELEVATOR_INIT,
	ELEVATOR_UP,
	ELEVATOR_DOWN,
	ELEVATOR_OFF,
}elevator_state_t;

//this number is equivalent to off time of duty cycle
#define ELEVATOR_DUTY_100 0
#define ELEVATOR_DUTY_50  TIME_16MS
#define ELEVATOR_DUTY_25  TIME_50MS
#define ELEVATOR_DUTY_10  TIME_166MS

extern __fastram__ elevator_state_t elevator_state;
extern __fastram__ U8 elevator_timer;
extern U8 elevator_speed;


/* User APIs */
void elevator_stop (void);
void elevator_move_up (void);
void elevator_move_down (void);
void elevator_bump_up (void);
void elevator_bump_down (void);


extern inline void elevator_stop_from_interrupt (void) {
	elevator_state = ELEVATOR_OFF;
	sol_disable (SOL_ELEVATOR_MOTOR);
}


extern inline void elevator_set_speed (U8 speed) { elevator_speed = speed; }

extern inline U8 elevator_get_speed (void) { return elevator_speed; }

extern inline elevator_state_t elevator_get_state (void) { return elevator_state; }


/**
 * Realtime update of a duty-cycled device.
 */
/* RTT(name=elevator_service freq=16) */
extern inline void elevator_service (void) {
	/* Only act if device is enabled */
	if (elevator_state != ELEVATOR_OFF) {
		if (elevator_timer == 0) {
			/* enabled for 1 tick.  We need to
			turn it off, and restart the off delay. */
			if (elevator_speed == 0)
				;
			else if (elevator_state == ELEVATOR_UP
					|| elevator_state == ELEVATOR_DOWN)
						sol_disable (SOL_ELEVATOR_MOTOR);
			elevator_timer = elevator_speed;
		}
		else if (--elevator_timer == 0) {
			/* We are in off delay, if timer reaches zero,
			then turn it back on. */
			if (elevator_state == ELEVATOR_UP
					|| elevator_state == ELEVATOR_DOWN)
						sol_enable (SOL_ELEVATOR_MOTOR);
		}
	}
}







